version: "3.4"

networks:
  net-db:
  net-proxy:

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      dockerfile: ./Dockerfile
    image: frontend
    restart: unless-stopped
    networks:
      - net-proxy
    ports:
      - "8080:8080"
    command: npm run dev
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
  backend:
    container_name: backend
    depends_on:
      - database
    build:
      context: ./backend/
      dockerfile: ./Dockerfile
      target: development
    image: backend
    networks:
      - net-db
      - net-proxy
    command: npm run start:dev
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - DATABASE_URL=postgres://ft_root:admin@db:5432/transcendance
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - SESSION_SECRET=${BACKEND_SESSION_SECRET}
      - BACKEND_JWT_SECRET=${BACKEND_JWT_SECRET}
      - BACKEND_JWT_EXPIRATION=${BACKEND_JWT_EXPIRATION}
      - INTRA42_UID=${INTRA42_UID}
      - INTRA42_SECRET=${INTRA42_SECRET}
      - INTRA42_CALLBACK_URL=${INTRA42_CALLBACK_URL}
    volumes:
      - ./backend/src:/app/src
      - ./backend/public:/app/public
    restart: unless-stopped

  database:
    container_name: database
    image: postgres:latest
    networks:
      - net-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - "5432:5432"
    # volumes:
      # - ./database/entrypoint/:/docker-entrypoint-initdb.d
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    networks:
      - net-db
    ports:
      - "5050:80"
    restart: unless-stopped
